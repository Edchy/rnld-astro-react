---
import '../styles/global.css';
import { Toaster } from '@/components/ui/sonner';
import { AppShell } from '@/components/AppShell';
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <link
      href="https://api.fontshare.com/v2/css?f[]=khand@400&f[]=array@400&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>Arnold</title>
  </head>
  <body class="min-h-screen">
    <div class="container mx-auto min-h-screen">
      <AppShell client:load>
        <slot />
      </AppShell>
      <slot name="main" />
      <Toaster richColors client:load />
    </div>
    <footer class="bg-primary text-background p-4 text-center text-9xl">
      <h2 class="font-bold uppercase">Arnold</h2>
    </footer>
  </body>
  <script>
    console.log('Hello from Layout.astro');
  </script>
  <script is:inline>
    const getThemePreference = () => {
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme');
      }
      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    };
    const isDark = getThemePreference() === 'dark';
    document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

    if (typeof localStorage !== 'undefined') {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      });
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ['class'],
      });
    }
  </script>
</html>
