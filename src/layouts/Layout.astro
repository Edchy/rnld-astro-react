---
import { Button } from "@/components/ui/button";
import "../styles/global.css";
import { ModeToggle } from "@/components/ModeToggle";
import { LoginDialog } from "@/components/LoginDialog";
import UserMenu from "@/components/UserMenu";
import { Toaster } from "@/components/ui/sonner";
import { AppShell } from "@/components/AppShell";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <link
      href="https://api.fontshare.com/v2/css?f[]=khand@400&f[]=array@400&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>Arnold</title>
  </head>
  <body>
    <AppShell client:load>
      <slot />
    </AppShell>
  </body>
</html>
<style is:global></style>
<script>
  console.log("Hello from Layout.astro");
</script>
<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
